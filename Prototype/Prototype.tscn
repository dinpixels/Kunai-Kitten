[gd_scene load_steps=62 format=2]

[ext_resource path="res://Prototype/TestPlayer.tscn" type="PackedScene" id=1]
[ext_resource path="res://src/assets/img/background/arena.png" type="Texture" id=2]
[ext_resource path="res://Prototype/Prototype.gd" type="Script" id=3]
[ext_resource path="res://src/assets/img/background/void.png" type="Texture" id=4]
[ext_resource path="res://Prototype/Firefly.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/assets/img/sprites/hp_bar_decor.png" type="Texture" id=6]
[ext_resource path="res://src/assets/img/sprites/hp_bar_progress.png" type="Texture" id=7]
[ext_resource path="res://src/assets/img/sprites/head_0.png" type="Texture" id=8]
[ext_resource path="res://src/assets/img/sprites/head_2.png" type="Texture" id=9]
[ext_resource path="res://src/assets/img/sprites/head_1.png" type="Texture" id=10]
[ext_resource path="res://Prototype/Outline.gdshader" type="Shader" id=11]
[ext_resource path="res://Prototype/Progress.gd" type="Script" id=12]
[ext_resource path="res://Prototype/ShadowZone.tscn" type="PackedScene" id=13]
[ext_resource path="res://Prototype/Blitz.tscn" type="PackedScene" id=14]
[ext_resource path="res://Prototype/Camera.gd" type="Script" id=15]
[ext_resource path="res://Prototype/SlashAnimation.tscn" type="PackedScene" id=16]
[ext_resource path="res://src/assets/fonts/INDFAIT_.TTF" type="DynamicFontData" id=17]
[ext_resource path="res://Prototype/ComboText.gd" type="Script" id=18]
[ext_resource path="res://Prototype/AvatarPlayer.gd" type="Script" id=19]
[ext_resource path="res://Prototype/Blitz.gd" type="Script" id=20]
[ext_resource path="res://Prototype/ComboTextTween.gd" type="Script" id=21]
[ext_resource path="res://Prototype/ScoreText.gd" type="Script" id=22]
[ext_resource path="res://Prototype/Dialogue.tscn" type="PackedScene" id=23]
[ext_resource path="res://src/assets/img/sprites/boss_bar_progress.png" type="Texture" id=26]
[ext_resource path="res://src/assets/img/sprites/boss_bar_avatar.png" type="Texture" id=27]
[ext_resource path="res://src/assets/img/sprites/boss_bar_under.png" type="Texture" id=28]
[ext_resource path="res://Prototype/BossBarProgress.gd" type="Script" id=29]
[ext_resource path="res://src/assets/img/sprites/boss.png" type="Texture" id=30]
[ext_resource path="res://Prototype/Boss.gd" type="Script" id=31]
[ext_resource path="res://src/assets/bgm/mushroom dance_0.ogg" type="AudioStream" id=32]

[sub_resource type="Shader" id=48]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/god-rays

Feel free to use, improve and change this shader according to your needs
and consider sharing the modified result on godotshaders.com.
*/

shader_type canvas_item;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;

uniform vec4 color : hint_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 48 )
shader_param/angle = 0.5
shader_param/position = -0.2
shader_param/spread = 0.7
shader_param/cutoff = -0.5
shader_param/falloff = 1.0
shader_param/edge_fade = 0.15
shader_param/speed = 1.0
shader_param/ray1_density = 8.0
shader_param/ray2_density = 30.0
shader_param/ray2_intensity = 0.15
shader_param/color = Color( 1, 0.9, 0.65, 0.8 )
shader_param/hdr = true
shader_param/seed = 20.0

[sub_resource type="Shader" id=44]
code = "shader_type canvas_item;

uniform bool whiten = false;

void fragment() {
	vec4 texture_color = texture(TEXTURE, UV);
	if (whiten) {
		vec3 white = vec3(1,1,1);
		vec3 whitened_texture_rgb = mix(texture_color.rgb, white, 1.0);
		COLOR = vec4(whitened_texture_rgb, texture_color.a);
	} else {
		COLOR = texture_color
	}
}"

[sub_resource type="ShaderMaterial" id=45]
shader = SubResource( 44 )
shader_param/whiten = false

[sub_resource type="AtlasTexture" id=35]
atlas = ExtResource( 30 )
region = Rect2( 276, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=36]
atlas = ExtResource( 30 )
region = Rect2( 368, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=37]
atlas = ExtResource( 30 )
region = Rect2( 276, 59, 92, 59 )

[sub_resource type="AtlasTexture" id=38]
atlas = ExtResource( 30 )
region = Rect2( 368, 59, 92, 59 )

[sub_resource type="AtlasTexture" id=26]
atlas = ExtResource( 30 )
region = Rect2( 460, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 30 )
region = Rect2( 460, 59, 92, 59 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 30 )
region = Rect2( 0, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=29]
atlas = ExtResource( 30 )
region = Rect2( 92, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=30]
atlas = ExtResource( 30 )
region = Rect2( 184, 0, 92, 59 )

[sub_resource type="AtlasTexture" id=31]
atlas = ExtResource( 30 )
region = Rect2( 0, 59, 92, 59 )

[sub_resource type="AtlasTexture" id=32]
atlas = ExtResource( 30 )
region = Rect2( 92, 59, 92, 59 )

[sub_resource type="AtlasTexture" id=33]
atlas = ExtResource( 30 )
region = Rect2( 184, 59, 92, 59 )

[sub_resource type="SpriteFrames" id=39]
animations = [ {
"frames": [ SubResource( 35 ) ],
"loop": false,
"name": "attack_left_0",
"speed": 1.0
}, {
"frames": [ SubResource( 36 ) ],
"loop": false,
"name": "attack_left_1",
"speed": 1.0
}, {
"frames": [ SubResource( 37 ) ],
"loop": false,
"name": "attack_right_0",
"speed": 1.0
}, {
"frames": [ SubResource( 38 ) ],
"loop": false,
"name": "attack_right_1",
"speed": 1.0
}, {
"frames": [ SubResource( 26 ) ],
"loop": false,
"name": "charge_left",
"speed": 1.0
}, {
"frames": [ SubResource( 27 ) ],
"loop": false,
"name": "charge_right",
"speed": 1.0
}, {
"frames": [ SubResource( 28 ), SubResource( 29 ), SubResource( 30 ) ],
"loop": true,
"name": "idle_left",
"speed": 9.0
}, {
"frames": [ SubResource( 31 ), SubResource( 32 ), SubResource( 33 ) ],
"loop": true,
"name": "idle_right",
"speed": 9.0
} ]

[sub_resource type="RectangleShape2D" id=46]
extents = Vector2( 48.875, 51.375 )

[sub_resource type="Animation" id=41]
resource_name = "pseudobot"
length = 4.9
loop = true
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.8, 1, 1.1, 1.2, 2, 2.2, 2.3, 2.4, 3.3, 3.5, 3.6, 3.7, 4.7, 4.8 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 684, 230 ), Vector2( 684, 230 ), Vector2( 684, 230 ), Vector2( 558, 34 ), Vector2( 380, 73 ), Vector2( 380, 73 ), Vector2( 380, 73 ), Vector2( 202, 118 ), Vector2( 69, 232 ), Vector2( 69, 232 ), Vector2( 69, 232 ), Vector2( 208, 256 ), Vector2( 373, 371 ), Vector2( 373, 371 ), Vector2( 510, 278 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:animation")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1, 1.3, 2.2, 2.5, 3.5, 3.8, 4.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ "idle_right", "charge_right", "idle_right", "charge_right", "idle_left", "charge_left", "idle_left", "charge_left" ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:playing")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=42]
resource_name = "start"
length = 2.0
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:animation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ "idle_right" ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:playing")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:position")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.2, 1.4, 1.5, 1.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 485, 231 ), Vector2( 485, 231 ), Vector2( 485, 231 ), Vector2( 564, 138 ), Vector2( 684, 230 ) ]
}

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;

uniform vec4 line_color : hint_color = vec4(1);
uniform float line_thickness : hint_range(0, 10) = 1.0;

void fragment() {
	vec2 size = TEXTURE_PIXEL_SIZE * line_thickness;
	
	float outline = texture(TEXTURE, UV + vec2(-size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, 0)).a;
	outline += texture(TEXTURE, UV + vec2(0, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
	outline += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
	outline += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
	outline = min(outline, 1.0);
	
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, line_color, outline - color.a);
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/line_color = Color( 1, 1, 1, 1 )
shader_param/line_thickness = 1.0

[sub_resource type="AnimatedTexture" id=3]
frames = 3
fps = 12.0
frame_0/texture = ExtResource( 8 )
frame_0/delay_sec = 4.0
frame_1/texture = ExtResource( 10 )
frame_1/delay_sec = 0.0
frame_2/texture = ExtResource( 9 )
frame_2/delay_sec = 0.0

[sub_resource type="Animation" id=12]
resource_name = "heal"
length = 0.5
step = 0.05
tracks/0/type = "value"
tracks/0/path = NodePath(".:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ ExtResource( 9 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath(".:self_modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath(".:rect_scale")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1.15, 1 ), Vector2( 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:margin_left")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.25, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ -12.0, -20.0, -12.0 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath(".:margin_top")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ -6.0 ]
}

[sub_resource type="Animation" id=9]
resource_name = "normal"
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath(".:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ SubResource( 3 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:margin_left")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -12, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:margin_top")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -6, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath(".:self_modulate:r")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath(".:self_modulate:g")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/5/type = "bezier"
tracks/5/path = NodePath(".:self_modulate:b")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/6/type = "bezier"
tracks/6/path = NodePath(".:self_modulate:a")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="Animation" id=10]
resource_name = "shake"
tracks/0/type = "value"
tracks/0/path = NodePath(".:texture")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ SubResource( 3 ) ]
}
tracks/1/type = "bezier"
tracks/1/path = NodePath(".:margin_left")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( -12, -0.25, 0, 0.25, 0, -24, -0.25, 0, 0.25, 0, -12, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2, 0.5 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath(".:margin_top")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( -6, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/3/type = "bezier"
tracks/3/path = NodePath(".:self_modulate:r")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"points": PoolRealArray( 100, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2 )
}
tracks/4/type = "bezier"
tracks/4/path = NodePath(".:self_modulate:g")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2 )
}
tracks/5/type = "bezier"
tracks/5/path = NodePath(".:self_modulate:b")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 0.2 )
}
tracks/6/type = "bezier"
tracks/6/path = NodePath(".:self_modulate:a")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[sub_resource type="ShaderMaterial" id=7]
shader = ExtResource( 11 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 4.0
shader_param/pattern = 0
shader_param/inside = false
shader_param/add_margins = false
shader_param/number_of_images = Vector2( 1, 1 )

[sub_resource type="ViewportTexture" id=8]
viewport_path = NodePath("HUD/HP")

[sub_resource type="ViewportTexture" id=17]
viewport_path = NodePath("HUD/Boss")

[sub_resource type="DynamicFont" id=13]
size = 50
outline_size = 9
use_filter = true
font_data = ExtResource( 17 )

[sub_resource type="DynamicFont" id=14]
size = 25
outline_size = 4
outline_color = Color( 0.270588, 0, 0.415686, 1 )
use_filter = true
font_data = ExtResource( 17 )

[node name="Prototype" type="Node"]
pause_mode = 1
script = ExtResource( 3 )

[node name="GodRays" type="Sprite" parent="."]
light_mask = 0
material = SubResource( 2 )
scale = Vector2( 4, 4 )
z_index = 1
texture = ExtResource( 4 )
centered = false

[node name="Firefly" parent="." instance=ExtResource( 5 )]

[node name="Background" type="Sprite" parent="."]
light_mask = 0
scale = Vector2( 2, 2 )
z_index = -20
texture = ExtResource( 2 )
centered = false

[node name="TestPlayer" parent="." instance=ExtResource( 1 )]
position = Vector2( 360, 230 )

[node name="Camera" type="Camera2D" parent="TestPlayer"]
light_mask = 0
position = Vector2( -6, 10 )
current = true
process_mode = 0
limit_left = 0
limit_top = 0
limit_right = 720
limit_bottom = 480
smoothing_enabled = true
smoothing_speed = 2.5
drag_margin_left = 0.0
drag_margin_top = 0.0
drag_margin_right = 0.0
drag_margin_bottom = 0.0
editor_draw_screen = false
script = ExtResource( 15 )

[node name="YSort" type="YSort" parent="."]
light_mask = 0

[node name="Boss" type="AnimatedSprite" parent="."]
visible = false
light_mask = 0
material = SubResource( 45 )
position = Vector2( 485, 231 )
frames = SubResource( 39 )
animation = "idle_right"
playing = true
offset = Vector2( -11, -1 )
script = ExtResource( 31 )

[node name="Hitbox" type="Area2D" parent="Boss"]
visible = false
show_behind_parent = true
light_mask = 0
position = Vector2( -24, 1 )
collision_layer = 2
collision_mask = 4
input_pickable = false
monitorable = false

[node name="Collision" type="CollisionShape2D" parent="Boss/Hitbox"]
light_mask = 0
shape = SubResource( 46 )

[node name="AimLine" type="RayCast2D" parent="Boss"]
show_behind_parent = true
light_mask = 0
cast_to = Vector2( 40, 0 )
collision_mask = 0
collide_with_bodies = false

[node name="Pointer" type="Position2D" parent="Boss/AimLine"]
light_mask = 0
position = Vector2( 40, 0 )

[node name="Pattern" type="AnimationPlayer" parent="Boss"]
anims/pseudobot = SubResource( 41 )
anims/start = SubResource( 42 )

[node name="AtkTimer" type="Timer" parent="Boss"]
one_shot = true

[node name="SpawnTimer" type="Timer" parent="."]
one_shot = true
autostart = true

[node name="HUD" type="CanvasLayer" parent="."]
layer = 7

[node name="HP" type="Viewport" parent="HUD"]
size = Vector2( 320, 140 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
gui_disable_input = true
shadow_atlas_quad_0 = 0
shadow_atlas_quad_1 = 0
shadow_atlas_quad_2 = 0
shadow_atlas_quad_3 = 0

[node name="HealthBar" type="HBoxContainer" parent="HUD/HP"]
light_mask = 0
material = SubResource( 5 )
margin_left = 30.0
margin_top = 30.0
margin_right = 296.0
margin_bottom = 120.0
mouse_filter = 2
input_pass_on_modal_close_click = false
custom_constants/separation = 0

[node name="ScarfDecor" type="TextureRect" parent="HUD/HP/HealthBar"]
light_mask = 0
margin_right = 92.0
margin_bottom = 90.0
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_horizontal = 3
size_flags_vertical = 3
texture = ExtResource( 6 )

[node name="Avatar" type="TextureRect" parent="HUD/HP/HealthBar/ScarfDecor"]
show_behind_parent = true
light_mask = 0
use_parent_material = true
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -12.0
margin_top = -6.0
mouse_filter = 2
input_pass_on_modal_close_click = false
texture = SubResource( 3 )

[node name="Player" type="AnimationPlayer" parent="HUD/HP/HealthBar/ScarfDecor/Avatar"]
autoplay = "normal"
reset_on_save = false
anims/heal = SubResource( 12 )
anims/normal = SubResource( 9 )
anims/shake = SubResource( 10 )
script = ExtResource( 19 )

[node name="Progress" type="TextureProgress" parent="HUD/HP/HealthBar"]
light_mask = 0
margin_left = 92.0
margin_right = 266.0
margin_bottom = 90.0
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_horizontal = 3
size_flags_vertical = 3
step = 0.5
value = 100.0
texture_progress = ExtResource( 7 )
script = ExtResource( 12 )

[node name="ShadowZone" parent="HUD/HP/HealthBar/Progress" instance=ExtResource( 13 )]
position = Vector2( 4, 30 )

[node name="Tween" type="Tween" parent="HUD/HP/HealthBar/Progress"]

[node name="HPTexture" type="TextureRect" parent="HUD"]
light_mask = 0
material = SubResource( 7 )
margin_right = 320.0
margin_bottom = 140.0
mouse_filter = 2
input_pass_on_modal_close_click = false
texture = SubResource( 8 )

[node name="Boss" type="Viewport" parent="HUD"]
size = Vector2( 300, 100 )
transparent_bg = true
handle_input_locally = false
usage = 0
render_target_v_flip = true
gui_disable_input = true
shadow_atlas_quad_0 = 0
shadow_atlas_quad_1 = 0
shadow_atlas_quad_2 = 0
shadow_atlas_quad_3 = 0

[node name="BossBar" type="HBoxContainer" parent="HUD/Boss"]
light_mask = 0
material = SubResource( 5 )
margin_left = 33.0
margin_top = 27.0
margin_right = 281.0
margin_bottom = 108.0
mouse_filter = 2
input_pass_on_modal_close_click = false
custom_constants/separation = 0

[node name="Progress" type="TextureProgress" parent="HUD/Boss/BossBar"]
light_mask = 0
margin_right = 186.0
margin_bottom = 81.0
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_horizontal = 3
size_flags_vertical = 3
max_value = 9000.0
step = 0.5
value = 9000.0
texture_under = ExtResource( 28 )
texture_progress = ExtResource( 26 )
fill_mode = 1
script = ExtResource( 29 )

[node name="ShadowZone" parent="HUD/Boss/BossBar/Progress" instance=ExtResource( 13 )]
position = Vector2( 10, 46 )
color = Color( 1, 0.596078, 0.133333, 1 )

[node name="Avatar" type="TextureRect" parent="HUD/Boss/BossBar"]
show_behind_parent = true
light_mask = 0
margin_left = 186.0
margin_right = 248.0
margin_bottom = 81.0
mouse_filter = 2
input_pass_on_modal_close_click = false
texture = ExtResource( 27 )

[node name="BossTexture" type="TextureRect" parent="HUD"]
light_mask = 0
material = SubResource( 7 )
anchor_left = 0.514
anchor_top = 1.0
anchor_right = 0.514
anchor_bottom = 1.0
margin_left = -150.08
margin_top = -111.0
margin_right = 149.92
margin_bottom = -11.0
rect_pivot_offset = Vector2( 150, 100 )
mouse_filter = 2
input_pass_on_modal_close_click = false
texture = SubResource( 17 )

[node name="Margin" type="MarginContainer" parent="HUD"]
light_mask = 0
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -194.0
margin_top = -71.0
rect_pivot_offset = Vector2( 194, 0 )
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_right = 15
custom_constants/margin_bottom = 15

[node name="ComboText" type="RichTextLabel" parent="HUD/Margin"]
light_mask = 0
margin_right = 179.0
margin_bottom = 56.0
rect_pivot_offset = Vector2( 179, 56 )
rect_clip_content = false
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_vertical = 0
custom_colors/default_color = Color( 0.917647, 0.219608, 0.65098, 1 )
custom_fonts/normal_font = SubResource( 13 )
bbcode_enabled = true
bbcode_text = "[right]123[/right]"
text = "123"
fit_content_height = true
scroll_active = false
deselect_on_focus_loss_enabled = false
script = ExtResource( 18 )

[node name="Blitz" parent="HUD/Margin/ComboText" instance=ExtResource( 14 )]
position = Vector2( 120, 3 )
script = ExtResource( 20 )

[node name="Tween" type="Tween" parent="HUD/Margin/ComboText"]
script = ExtResource( 21 )

[node name="Margin2" type="MarginContainer" parent="HUD"]
light_mask = 0
anchor_top = 1.0
anchor_bottom = 1.0
margin_top = -44.0
margin_right = 199.0
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_horizontal = 3
size_flags_vertical = 3
custom_constants/margin_left = 30
custom_constants/margin_bottom = 15

[node name="ScoreText" type="RichTextLabel" parent="HUD/Margin2"]
light_mask = 0
margin_left = 30.0
margin_right = 199.0
margin_bottom = 29.0
rect_pivot_offset = Vector2( 0, 29 )
rect_clip_content = false
mouse_filter = 2
input_pass_on_modal_close_click = false
size_flags_vertical = 0
custom_colors/default_color = Color( 1, 1, 1, 1 )
custom_fonts/normal_font = SubResource( 14 )
bbcode_enabled = true
bbcode_text = "1234560"
text = "1234560"
fit_content_height = true
scroll_active = false
deselect_on_focus_loss_enabled = false
script = ExtResource( 22 )

[node name="Tween" type="Tween" parent="HUD/Margin2/ScoreText"]

[node name="SlashAnimation" parent="HUD" instance=ExtResource( 16 )]
visible = false

[node name="Dialogue" parent="." instance=ExtResource( 23 )]

[node name="BGM" type="AudioStreamPlayer" parent="."]
pause_mode = 2
stream = ExtResource( 32 )
autoplay = true

[connection signal="visibility_changed" from="Boss" to="Boss" method="_on_visibility_changed"]
[connection signal="area_entered" from="Boss/Hitbox" to="Boss" method="_on_Hitbox_area_entered"]
[connection signal="animation_finished" from="Boss/Pattern" to="Boss" method="_on_animation_finished"]
[connection signal="timeout" from="Boss/AtkTimer" to="Boss" method="_on_AtkTimer_timeout"]
[connection signal="timeout" from="SpawnTimer" to="." method="_on_timeout"]
[connection signal="animation_finished" from="HUD/HP/HealthBar/ScarfDecor/Avatar/Player" to="HUD/HP/HealthBar/Progress" method="_on_Player_animation_finished"]
[connection signal="ready" from="HUD/HP/HealthBar/Progress/Tween" to="HUD/HP/HealthBar/Progress" method="_on_Tween_ready"]
